{"version":3,"file":"src_app_pages_stopwatch_stopwatch_module_ts.js","mappings":"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","sources":["./src/app/pages/stopwatch/stopwatch.module.ts","./src/app/pages/stopwatch/stopwatch.page.ts","./src/app/pages/stopwatch/stopwatch.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { StopwatchPage } from './stopwatch.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { RouterModule } from '@angular/router';\nimport { IonicSelectableModule } from 'ionic-selectable';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    PipesModule,\n    IonicSelectableModule,\n    RouterModule.forChild([{ path: '', component: StopwatchPage }])\n  ],\n  declarations: [\n    StopwatchPage,\n  ]\n})\nexport class CreateStopwatchPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Stopwatch } from '../../models/stopwatch';\nimport { Project } from 'src/app/models/project';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientService } from 'src/app/models/client_service';\nimport { Package } from 'src/app/models/package';\nimport { ToDurationPipe } from 'src/app/pipes/to-duration.pipe';\nimport { DatePipe } from '@angular/common';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { Timesheet } from 'src/app/models/timesheet';\nimport { DEFAULTS, STORAGE, TYPES } from 'src/app/models/constants';\nimport { UtilsService } from 'src/app/services/utils/utils.service';\nimport { StorageService } from 'src/app/services/storage/storage.service';\nimport { CalendarModal } from 'ion2-calendar';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { Observable } from 'rxjs';\nimport { Contact } from 'src/app/models/contact';\nimport { TimesheetStatus } from 'src/app/models/timsheet_status';\nimport { StopwatchesService } from 'src/app/services/stopwatches/stopwatches.service';\n\n@Component({\n  selector: 'app-stopwatch',\n  templateUrl: './stopwatch.page.html',\n  styleUrls: ['./stopwatch.page.scss'],\n})\nexport class StopwatchPage {\n\n  public isUpdate = false\n\n  public availablePackages: Package[] = []\n  public projects: Project[] = []\n  public clientServices: ClientService[] = []\n  public timesheetStatus: TimesheetStatus[] = []\n  public contact: Contact = null;\n\n  public stopwatch = new Stopwatch()\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private stopwatchesService: StopwatchesService,\n    private navController: NavController,\n    private storage: StorageService,\n    private utils: UtilsService\n  ) {\n    this.init()\n  }\n\n  // private contactSearch: Observable<Contact[]> = null // = this.apiService.searchContact()\n\n  private async init() {\n    this.projects = await this.apiService.getProjects()\n    this.clientServices = await this.apiService.getClientService()\n    this.timesheetStatus = await this.apiService.getTimesheetStatus()\n\n    if (await this.storage.getString(STORAGE.SETTINGS_LAST_SERVICE, DEFAULTS.SERVICE_ID) != TYPES.NONE) {\n      this.stopwatch.client_service_id = await this.storage.getNumber(STORAGE.SETTINGS_LAST_SERVICE_ID)\n      this.updateClientServices()\n    }\n\n    if (await this.storage.getString(STORAGE.SETTINGS_LAST_STATUS, DEFAULTS.STATUS_ID) != TYPES.NONE) {\n      this.stopwatch.status_id = await this.storage.getNumber(STORAGE.SETTINGS_LAST_STATUS_ID)\n      this.updateStatus()\n    }\n\n    if (await this.storage.getString(STORAGE.SETTINGS_LAST_PROJECT, DEFAULTS.PROJECT_ID) != TYPES.NONE) {\n      this.stopwatch.pr_project_id = await this.storage.getNumber(STORAGE.SETTINGS_LAST_PROJECT_ID)\n      this.availablePackages = await this.apiService.getPackagesForProject(this.stopwatch.pr_project_id)\n      this.updateSelectTexts()\n    }\n\n    this.route.params.subscribe(async params => {\n      if (params['stopwatch_id']) {\n        this.isUpdate = true\n        let stopwatch = await this.stopwatchesService.get(params['stopwatch_id'])\n        if(stopwatch){\n          this.stopwatch = stopwatch\n          this.availablePackages = await this.apiService.getPackagesForProject(this.stopwatch.pr_project_id)\n        }\n      }\n      this.updateSelectTexts()\n    })\n  }\n\n  public async updateClientServices() {\n    const filteredClientServices = this.clientServices.filter(i => i.id == this.stopwatch.client_service_id)\n    if (filteredClientServices.length > 0) {\n      this.stopwatch.selectedClientServiceText = filteredClientServices[0].name\n    }\n  }\n\n  public async updateStatus() {\n    const filteredStatus = this.timesheetStatus.filter(i => i.id == this.stopwatch.status_id)\n    if (filteredStatus.length > 0) {\n      this.stopwatch.selectedStatusText = filteredStatus[0].name\n    }\n  }\n\n\n  private async updateSelectTexts() {\n    // set project\n    const filteredProjects = this.projects.filter(i => i.id == this.stopwatch.pr_project_id)\n    if (filteredProjects.length > 0) {\n      this.stopwatch.selectedProjectText = filteredProjects[0].name\n      this.stopwatch.contact_id = filteredProjects[0].contact_id\n      console.log('selectedProjectText', this.stopwatch.selectedProjectText)\n      console.log('pr_package_id', this.stopwatch.pr_package_id)\n      if (this.stopwatch.pr_package_id) {\n        this.stopwatch.selectedPackageText = (await this.apiService.getPackageForProjectWithId(this.stopwatch.pr_project_id, this.stopwatch.pr_package_id)).name\n        console.log('selectedPackageText', this.stopwatch.selectedPackageText)\n\n      }\n    }\n  }\n\n  async onProjectSelected() {\n    this.availablePackages = await this.apiService.getPackagesForProject(this.stopwatch.pr_project_id)\n    this.updateSelectTexts()\n  }\n\n  async save() {\n    if (\n      !this.stopwatch.title\n      || this.stopwatch.title.length < 1\n      || !this.stopwatch.text\n      || this.stopwatch.text.length < 1\n      || !this.stopwatch.client_service_id\n      || !this.stopwatch.status_id\n      ) {\n      this.utils.showToast('Missing information')\n      return false;\n    }\n    await this.stopwatchesService.add(this.stopwatch)\n    if(this.isUpdate){\n      this.utils.showToast('Updated')\n    }else{\n      this.utils.showToast('Created')\n    }\n    this.navController.navigateRoot('/tabs/stopwatches');\n  }\n\n  contactChange(event: {\n    component: IonicSelectableComponent,\n    value: any\n  }) {\n    console.log('port:', event.value);\n  }\n\n  async searchContact(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    let text = event.text.trim().toLowerCase();\n    event.component.startSearch();\n    event.component.items = await this.apiService.searchContact(text)\n    event.component.endSearch();\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button mode=\"md\" defaultHref=\"/tabs/stopwatches\"></ion-back-button>\n    </ion-buttons>\n\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">\n        <ion-icon slot=\"icon-only\" name=\"save\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title *ngIf=\"isUpdate\">{{ 'Update stopwatch' | translate }}</ion-title>\n    <ion-title *ngIf=\"!isUpdate\">{{ 'Create stopwatch' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n\n    <ion-item>\n      <ion-label position=\"stacked\">{{ 'Stopwatch title' | translate }}</ion-label>\n      <ion-textarea autoGrow=\"true\" placeholder=\"Text\" [(ngModel)]=\"stopwatch.title\"></ion-textarea>\n    </ion-item>\n\n    <!-- <ion-item>\n      <ion-label position=\"stacked\">{{ 'Contact' | translate}}</ion-label>\n      <ionic-selectable [(ngModel)]=\"contact\" itemValueField=\"id\" [searchDebounce]=\"500\" [canSearch]=\"true\"\n        [canClear]=\"true\" (onSearch)=\"searchContact($event)\">\n        <ng-template ionicSelectableIconTemplate></ng-template>\n        <ng-template ionicSelectableItemIconTemplate></ng-template>\n        <ng-template ionicSelectableSearchFailTemplate>\n          <div class=\"ion-margin\">{{ 'No contacts found' | translate }}</div>\n        </ng-template>\n        <ng-template ionicSelectableItemEndTemplate let-port=\"item\" let-isPortSelected=\"isItemSelected\"></ng-template>\n        <ng-template ionicSelectableItemTemplate let-port=\"item\" let-isPortSelected=\"isItemSelected\">{{port.name_2}}\n          {{port.name_1}}</ng-template>\n        <ng-template ionicSelectablePlaceholderTemplate>{{ 'Select contact' | translate}}</ng-template>\n        <ng-template ionicSelectableValueTemplate let-port=\"value\">{{port.name_2}} {{port.name_1}}</ng-template>\n      </ionic-selectable>\n    </ion-item> -->\n\n    <ion-item>\n      <ion-label>{{ 'Chargeable' | translate }}</ion-label>\n      <ion-toggle [(ngModel)]=\"stopwatch.allowable_bill\"></ion-toggle>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"stacked\">{{ 'Service' | translate }}*</ion-label>\n      <ion-select placeholder=\"{{ 'Service' | translate }}\" (ionChange)=\"updateClientServices()\" [(ngModel)]=\"stopwatch.client_service_id\" [selectedText]=\"stopwatch.selectedClientServiceText\">\n        <ion-select-option *ngFor=\"let clientService of clientServices\" [value]=\"clientService.id\">\n          {{ clientService.name }}\n        </ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"floating\">{{ 'Project' | translate }}</ion-label>\n      <ion-select placeholder=\"{{ 'Project' | translate }}\" (ionChange)=\"onProjectSelected()\" [(ngModel)]=\"stopwatch.pr_project_id\"\n        [selectedText]=\"stopwatch.selectedProjectText\">\n        <ion-select-option *ngFor=\"let project of projects\" value=\"{{ project.id }}\">{{ project.name }}\n        </ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"floating\">{{ 'Package' | translate }}</ion-label>\n      <ion-select placeholder=\"{{ 'Package' | translate }}\" (ionChange)=\"onProjectSelected()\" [(ngModel)]=\"stopwatch.pr_package_id\" [selectedText]=\"stopwatch.selectedPackageText\">\n        <ion-select-option *ngFor=\"let package of availablePackages\" value=\"{{ package.id }}\">{{ package.name }}\n        </ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"stacked\">{{ 'Status' | translate }}*</ion-label>\n      <ion-select placeholder=\"Select\" (ionChange)=\"updateStatus()\" [(ngModel)]=\"stopwatch.status_id\" [selectedText]=\"stopwatch.selectedStatusText\">\n        <ion-select-option *ngFor=\"let status of timesheetStatus\" [value]=\"status.id\">{{status.name}}\n        </ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"stacked\">{{ 'Description' | translate }}*</ion-label>\n      <ion-textarea autoGrow=\"true\" placeholder=\"Text\" [(ngModel)]=\"stopwatch.text\"></ion-textarea>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"floating\">{{ 'Strategy' | translate }}</ion-label>\n      <ion-select placeholder=\"{{ 'Strategy' | translate }}\" [(ngModel)]=\"stopwatch.strategy\">\n        <ion-select-option [value]=\"0\">{{ 'Always ask' | translate }}</ion-select-option>\n        <ion-select-option [value]=\"1\">{{ 'Automatically create' | translate }}</ion-select-option>\n        <ion-select-option [value]=\"2\">{{ 'Always edit' | translate }}</ion-select-option>\n      </ion-select>\n    </ion-item>\n  </ion-list>\n\n</ion-content>"],"names":["CommonModule","FormsModule","IonicModule","StopwatchPage","TranslateModule","PipesModule","RouterModule","IonicSelectableModule","CreateStopwatchPageModule","forChild","path","component","declarations","imports","Stopwatch","DEFAULTS","STORAGE","TYPES","i0","constructor","apiService","router","route","stopwatchesService","navController","storage","utils","init","_this","projects","getProjects","clientServices","getClientService","timesheetStatus","getTimesheetStatus","getString","SETTINGS_LAST_SERVICE","SERVICE_ID","NONE","stopwatch","client_service_id","getNumber","SETTINGS_LAST_SERVICE_ID","updateClientServices","SETTINGS_LAST_STATUS","STATUS_ID","status_id","SETTINGS_LAST_STATUS_ID","updateStatus","SETTINGS_LAST_PROJECT","PROJECT_ID","pr_project_id","SETTINGS_LAST_PROJECT_ID","availablePackages","getPackagesForProject","updateSelectTexts","params","subscribe","isUpdate","get","filteredClientServices","_this2","filter","i","id","length","selectedClientServiceText","name","filteredStatus","_this3","selectedStatusText","filteredProjects","_this4","selectedProjectText","contact_id","console","log","pr_package_id","selectedPackageText","getPackageForProjectWithId","onProjectSelected","_this5","save","_this6","title","text","showToast","add","navigateRoot","contactChange","event","value","searchContact","trim","toLowerCase","startSearch","items","_this7","endSearch","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}